-- CREATE TABLE CUSTOMER
CREATE TABLE CUSTOMER (
    CUST_ID NUMBER PRIMARY KEY,
    CUST_NAME VARCHAR2(20)
);

-- INSERT SAMPLE DATA INTO CUSTOMER
INSERT ALL
    INTO CUSTOMER VALUES (1, 'Alice')
    INTO CUSTOMER VALUES (2, 'Bob')
    INTO CUSTOMER VALUES (3, 'Charlie')
    INTO CUSTOMER VALUES (4, 'David')
    INTO CUSTOMER VALUES (5, 'Emily')
SELECT * FROM DUAL;

-- CREATE TABLE ITEM
CREATE TABLE ITEM (
    ITEM_ID NUMBER PRIMARY KEY,
    ITEM_NAME VARCHAR2(20),
    PRICE NUMBER(12, 2)
);

-- INSERT SAMPLE DATA INTO ITEM
INSERT ALL
    INTO ITEM VALUES (101, 'Ice-cream', 3.50)
    INTO ITEM VALUES (102, 'Cold Drinks', 2.00)
    INTO ITEM VALUES (103, 'Sandwich', 5.00)
    INTO ITEM VALUES (104, 'Salad', 4.00)
    INTO ITEM VALUES (105, 'Soup', 3.00)
SELECT * FROM DUAL;

-- CREATE TABLE BILL
CREATE TABLE BILL (
    BILL_NO NUMBER PRIMARY KEY,
    BILL_DATE DATE,
    CUST_ID NUMBER,
    ITEM_ID NUMBER,
    QTY_SOLD NUMBER,
    BILL_AMT NUMBER(12, 2),
    CONSTRAINT BIFK1 FOREIGN KEY (CUST_ID) REFERENCES CUSTOMER(CUST_ID),
    CONSTRAINT BIFK2 FOREIGN KEY (ITEM_ID) REFERENCES ITEM(ITEM_ID)
);

-- INSERT SAMPLE DATA INTO BILL
INSERT ALL
    INTO BILL VALUES (1, TO_DATE('11-APR-2016', 'DD-MON-YYYY'), 1, 101, 2, 7.00)
    INTO BILL VALUES (2, TO_DATE('12-APR-2016', 'DD-MON-YYYY'), 2, 101, 1, 3.50)
    INTO BILL VALUES (3, TO_DATE('13-APR-2016', 'DD-MON-YYYY'), 3, 103, 1, 5.00)
    INTO BILL VALUES (4, TO_DATE('14-APR-2016', 'DD-MON-YYYY'), 4, 102, 3, 6.00)
    INTO BILL VALUES (5, TO_DATE('15-APR-2016', 'DD-MON-YYYY'), 5, 105, 2, 6.00)
SELECT * FROM DUAL;

-- QUERY 1
-- List the details of the customers who bought "ice-cream" but not "cold drinks"

SELECT DISTINCT C.*
FROM CUSTOMER C
JOIN BILL B ON C.CUST_ID = B.CUST_ID
JOIN ITEM I ON B.ITEM_ID = I.ITEM_ID
WHERE I.ITEM_NAME = 'Ice-cream'
AND C.CUST_ID NOT IN (
	SELECT DISTINCT C2.CUST_ID
	FROM CUSTOMER C2
	JOIN BILL B2 ON C2.CUST_ID = B2.CUST_ID
	JOIN ITEM I2 ON B2.ITEM_ID = I2.ITEM_ID
	WHERE I2.ITEM_NAME = 'Cold Drinks'
);

-- QUERY 2
-- Print the total bill amount for every day of the week starting on 11/04/16 and ending on 
-- 16/04/16, for items whose names start with 'S'

SELECT BILL_DATE, SUM(BILL_AMT) AS TOTAL_BILL_AMOUNT
FROM BILL B
JOIN ITEM I ON B.ITEM_ID = I.ITEM_ID
WHERE I.ITEM_NAME LIKE 'S%'
AND B.BILL_DATE BETWEEN TO_DATE('11-APR-2016', 'DD-MON-YYYY') AND TO_DATE('16-APR-2016','DD-MON-YYYY')
GROUP BY BILL_DATE
ORDER BY BILL_DATE;

-- QUERY 3
-- For every item sold to "Alice", find the total quantity sold

SELECT I.ITEM_NAME, SUM(b.QTY_SOLD) AS TOTAL_QUANTITY_SOLD
FROM BILL B
JOIN ITEM I ON B.ITEM_ID = I.ITEM_ID
JOIN CUSTOMER C ON B.CUST_ID = C.CUST_ID
WHERE C.CUST_NAME = 'Alice'
GROUP BY I.ITEM_NAME;

-- QUERY 4
-- Find the number of customers who have purchased an item that is costlier than the costliest item 
-- purchased by "Bob"

SELECT COUNT(DISTINCT B.CUST_ID) AS NUM_CUSTOMERS
FROM BILL B
JOIN ITEM I ON B.ITEM_ID = I.ITEM_ID
WHERE I.PRICE > (
    SELECT MAX(I2.PRICE)
    FROM BILL B2
    JOIN ITEM I2 ON B2.ITEM_ID = I2.ITEM_ID
    JOIN CUSTOMER C2 ON B2.CUST_ID = C2.CUST_ID
    WHERE C2.CUST_NAME = 'Bob'
);
