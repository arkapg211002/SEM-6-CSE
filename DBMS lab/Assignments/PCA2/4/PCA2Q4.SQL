-- CREATE TABLE Parts
CREATE TABLE PARTS (
    PNO NUMBER PRIMARY KEY,
    PNAME VARCHAR2(20),
    QOH NUMBER,
    PRICE NUMBER(10,2),
    OLEVEL NUMBER
);

-- INSERT SAMPLE DATA INTO Parts
INSERT ALL
    INTO PARTS VALUES (1, 'Widget', 100, 55.00, 50)
    INTO PARTS VALUES (2, 'Gizmo', 75, 60.00, 40)
    INTO PARTS VALUES (3, 'Doodad', 50, 45.00, 30)
    INTO PARTS VALUES (4, 'Thingamajig', 120, 65.00, 60)
    INTO PARTS VALUES (5, 'Widget Junior', 200, 35.00, 80)
SELECT * FROM DUAL;

-- CREATE TABLE Customers
CREATE TABLE CUSTOMERS (
    CNO NUMBER PRIMARY KEY,
    CNAME VARCHAR2(20),
    STREET VARCHAR2(20),
    ZIP NUMBER,
    PHONE VARCHAR2(20)
);

-- INSERT SAMPLE DATA INTO Customers
INSERT ALL
    INTO CUSTOMERS VALUES (1, 'Alice', '123 Main St', 10001, '555-1234')
    INTO CUSTOMERS VALUES (2, 'Bob', '456 Elm St', 10002, '555-5678')
    INTO CUSTOMERS VALUES (3, 'Charlie', '789 Oak St', 10001, '555-9876')
    INTO CUSTOMERS VALUES (4, 'David', '321 Pine St', 10003, '555-4567')
    INTO CUSTOMERS VALUES (5, 'Emily', '567 Cedar St', 10002, '555-7890')
SELECT * FROM DUAL;

-- CREATE TABLE Employees
CREATE TABLE EMPLOYEES (
    ENO NUMBER PRIMARY KEY,
    ENAME VARCHAR2(20),
    ZIP NUMBER,
    HDATE DATE
);

-- INSERT SAMPLE DATA INTO Employees
INSERT ALL
    INTO EMPLOYEES VALUES (1, 'John', 10001, TO_DATE('01-JAN-2020', 'DD-MON-YYYY'))
    INTO EMPLOYEES VALUES (2, 'Jane', 10002, TO_DATE('15-FEB-2019', 'DD-MON-YYYY'))
    INTO EMPLOYEES VALUES (3, 'Alice', 10001, TO_DATE('10-MAR-2021', 'DD-MON-YYYY'))
    INTO EMPLOYEES VALUES (4, 'Bob', 10003, TO_DATE('05-APR-2022', 'DD-MON-YYYY'))
    INTO EMPLOYEES VALUES (5, 'David', 10002, TO_DATE('20-MAY-2020', 'DD-MON-YYYY'))
SELECT * FROM DUAL;

-- CREATE TABLE Zip Codes
CREATE TABLE ZIP_CODES (
    ZIP NUMBER PRIMARY KEY,
    CITY VARCHAR2(20)
);

-- INSERT SAMPLE DATA INTO Zip Codes
INSERT ALL
    INTO ZIP_CODES VALUES (10001, 'Wellington')
    INTO ZIP_CODES VALUES (10002, 'Springfield')
    INTO ZIP_CODES VALUES (10003, 'Riverside')
SELECT * FROM DUAL;

-- CREATE TABLE Orders
CREATE TABLE ORDERS (
    ONO NUMBER PRIMARY KEY,
    CNO NUMBER,
    ENO NUMBER,
    RECEIVED DATE,
    SHIPPED DATE,
    CONSTRAINT ORFK1 FOREIGN KEY (CNO) REFERENCES CUSTOMERS(CNO),
    CONSTRAINT ORFK2 FOREIGN KEY (ENO) REFERENCES EMPLOYEES(ENO)
);

-- INSERT SAMPLE DATA INTO Orders
INSERT ALL
    INTO ORDERS VALUES (101, 1, 1, TO_DATE('01-APR-2022', 'DD-MON-YYYY'), TO_DATE('03-APR-2022', 'DD-MON-YYYY'))
    INTO ORDERS VALUES (102, 2, 2, TO_DATE('02-APR-2022', 'DD-MON-YYYY'), TO_DATE('04-APR-2022', 'DD-MON-YYYY'))
    INTO ORDERS VALUES (103, 3, 1, TO_DATE('03-APR-2022', 'DD-MON-YYYY'), TO_DATE('05-APR-2022', 'DD-MON-YYYY'))
    INTO ORDERS VALUES (104, 4, 3, TO_DATE('04-APR-2022', 'DD-MON-YYYY'), TO_DATE('06-APR-2022', 'DD-MON-YYYY'))
    INTO ORDERS VALUES (105, 5, 2, TO_DATE('05-APR-2022', 'DD-MON-YYYY'), TO_DATE('07-APR-2022', 'DD-MON-YYYY'))
SELECT * FROM DUAL;

-- CREATE TABLE ODetails
CREATE TABLE ODETAILS (
    ONO NUMBER,
    PNO NUMBER,
    QTY NUMBER,
    CONSTRAINT ODFK1 FOREIGN KEY (ONO) REFERENCES ORDERS(ONO),
    CONSTRAINT ODFK2 FOREIGN KEY (PNO) REFERENCES PARTS(PNO)
);

-- INSERT SAMPLE DATA INTO ODetails
INSERT ALL
    INTO ODETAILS VALUES (101, 1, 2)
    INTO ODETAILS VALUES (102, 2, 3)
    INTO ODETAILS VALUES (103, 3, 1)
    INTO ODETAILS VALUES (104, 4, 2)
    INTO ODETAILS VALUES (105, 5, 2)
SELECT * FROM DUAL;

-- QUERY 1
-- Retrieve the names and cities of employees who have taken orders for parts costing more than $50.00

SELECT DISTINCT E.ENAME, Z.CITY
FROM EMPLOYEES E
JOIN ORDERS O ON E.ENO = O.ENO
JOIN ODETAILS OD ON O.ONO = OD.ONO
JOIN PARTS P ON OD.PNO = P.PNO
JOIN ZIP_CODES Z ON E.ZIP = Z.ZIP
WHERE P.PRICE > 50.00;

-- QUERY 2
-- Retrieve the pairs of customer number, customers who live in the same zip code

SELECT C1.CNO AS CUSTOMER_NO_1, C2.CNO AS CUSTOMER_NO_2, C1.ZIP
FROM CUSTOMERS C1
JOIN CUSTOMERS C2 ON C1.ZIP = C2.ZIP AND C1.CNO < C2.CNO;

-- QUERY 3
-- For every customer who has ordered exactly '2' parts from employees living in 'Wellington', retrieve 
-- the part name and the price of the part

SELECT C.CNO, P.PNAME, P.PRICE
FROM CUSTOMERS C
JOIN ORDERS O ON C.CNO = O.CNO
JOIN ODETAILS OD ON O.ONO = OD.ONO
JOIN PARTS P ON OD.PNO = P.PNO
JOIN EMPLOYEES E ON O.ENO = E.ENO
WHERE E.ZIP = 10001
GROUP BY C.CNO, P.PNAME, P.PRICE
HAVING COUNT(OD.PNO) = 2;

-- QUERY 4
-- Retrieve the names of customers who have not placed an order

SELECT CNAME
FROM CUSTOMERS
WHERE CNO NOT IN (SELECT DISTINCT CNO FROM ORDERS);
