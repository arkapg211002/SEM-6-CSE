-- ASSIGNMENT 5.1
-- CLIENT MASTER TABLE
CREATE TABLE CLIENT_MASTER(
CLIENT_NO VARCHAR2(6) PRIMARY KEY CHECK(CLIENT_NO LIKE 'C%'),
NAME VARCHAR2(20) NOT NULL,
CITY VARCHAR2(15),
PINCODE NUMBER(8),
STATE VARCHAR2(15),
BAL_DUE NUMBER(10,2)
);

-- INSERT INTO CLIENT MASTER
INSERT ALL 
INTO CLIENT_MASTER VALUES ('C1','ARKAPRATIM','KOLKATA',700059,'WEST BENGAL',1000.00)
INTO CLIENT_MASTER VALUES ('C2','SOUMODEEP','MUMBAI',700002,'MAHARASHTRA',2000.00)
INTO CLIENT_MASTER VALUES ('C3','DEBARGHYA','NOIDA',700078,'UTTARPRADESH',3000.00)
INTO CLIENT_MASTER VALUES ('C4','PRITHWISH','KOLKATA',800059,'WEST BENGAL',4000.00)
INTO CLIENT_MASTER VALUES ('C5','SAGNIK','BENGALURU',900059,'MAHARASHTRA',5000.00)
SELECT * FROM DUAL;

-- List the names of all clients having ‘a’ as the third letter in their names. 
SELECT NAME FROM CLIENT_MASTER WHERE NAME LIKE '--A%';

-- List the clients who stay in a city whose first letter is ‘K’.
SELECT * FROM CLIENT_MASTER WHERE CITY LIKE 'K%';

-- List all the clients who stay in ‘Mumbai’ or ‘Kolkata’. 
SELECT * FROM CLIENT_MASTER WHERE CITY IN ('MUMBAI','KOLKATA');

-- List all the clients whose BalDue is greater than value 1000.
SELECT * FROM CLIENT_MASTER WHERE BAL_DUE > 1000;

-- List all information from the Sales_Order table for orders placed 
-- in the month of June. 
UPDATE SALES_ORDER 
SET ORDER_DATE = (TO_DATE('12-06-23','DD-MM-YYYY')) 
WHERE ORDER_NO = 'O001';

SELECT * FROM SALES_ORDER WHERE EXTRACT(MONTH FROM ORDER_DATE) = '6';

-- List the order information for Client_no ‘C1’ and ‘C3’.
SELECT * FROM SALES_ORDER_DETAILS S
WHERE S.ORDER_NO IN (
	SELECT ORDER_NO FROM SALES_ORDER WHERE CLIENT_NO IN ('C1','C3')
);

-- List products whose selling price is greater than 500 and less than or equal to 750
SELECT * FROM PRODUCT_MASTER WHERE SELL_PRICE > 500 AND SELL_PRICE <= 750; 

-- Count the total number of order. 
SELECT COUNT(ORDER_NO) AS TOTAL_ORDERS FROM SALES_ORDER;

-- Determine  the  maximum  and  minimum  product  prices.  
-- Rename  the  output  as max_price and min_price respectively
SELECT MAX(SELL_PRICE) max_price, MIN(SELL_PRICE) min_price FROM PRODUCT_MASTER;

-- Count the number of client who live in Kolkata.
SELECT COUNT(CITY) PEOPLE_LIVING_IN_KOLKATA FROM CLIENT_MASTER WHERE CITY = 'KOLKATA';

-- Count the number of products having price less than or equal to 500.
SELECT COUNT(SELL_PRICE) PRICE_LESSTHANEQUALTO_500 FROM PRODUCT_MASTER WHERE SELL_PRICE <= 500;

-- List the order number and day on which clients placed their order. 
SELECT ORDER_NO , TO_CHAR(ORDER_DATE,'DAY') AS DAY FROM SALES_ORDER;

-- List the Order_Date in the format ‘DD-Month-YY’.
SELECT TO_DATE(ORDER_DATE,'DD-MONTH-YY') AS ORDER_DATE FROM SALES_ORDER;

-- List the date, 20 days after today’s date.
SELECT SYSDATE + 20 AFTER_20_DAYS FROM DUAL;

-- List name of the client who has maximum BalDue.
SELECT NAME FROM CLIENT_MASTER WHERE BAL_DUE = (SELECT MAX(BAL_DUE) FROM CLIENT_MASTER);

-- Find the difference between maximum BalDue and minimum BalDue.
SELECT MAX(BAL_DUE) - MIN(BAL_DUE) AS DIFF FROM CLIENT_MASTER;

-- Add Rs.1000/- with the salary amount of every salesmen.
UPDATE SMAN_MAST SET SAL_AMT = SAL_AMT + 1000; 


-- ASSIGNMENT 5.2
/*
CREATE TABLES

employee: emp_no, name, dob, sex, address, salary 
company: comp_no, name, address 
works: emp_no, comp_no
*/

CREATE TABLE EMPLOYEE (
EMP_NO VARCHAR2(8) PRIMARY KEY CHECK(EMP_NO LIKE 'E%'),
NAME VARCHAR2(20) NOT NULL,
DOB DATE NOT NULL,
SEX CHAR(1) CHECK(SEX IN ('M','F')),
ADDRESS VARCHAR2(20) NOT NULL,
SALARY NUMBER(8) NOT NULL
);

CREATE TABLE COMPANY (
COMP_NO VARCHAR2(8) PRIMARY KEY CHECK(COMP_NO LIKE 'C%'),
NAME VARCHAR2(20) NOT NULL,
ADDRESS VARCHAR2(20) NOT NULL
);

CREATE TABLE WORKS (
EMP_NO VARCHAR2(8) NOT NULL,
COMP_NO VARCHAR2(8) NOT NULL,
CONSTRAINT FK1 FOREIGN KEY (EMP_NO) REFERENCES EMPLOYEE(EMP_NO) ON DELETE CASCADE,
CONSTRAINT FK2 FOREIGN KEY (COMP_NO) REFERENCES COMPANY(COMP_NO) ON DELETE CASCADE
);

-- INSERT VALUES
INSERT ALL
INTO EMPLOYEE VALUES('E1','ARKA',TO_DATE('21-10-2002','DD-MM-YYYY'),'M','AC-13',50000)
INTO EMPLOYEE VALUES('E2','RAMU',TO_DATE('10-02-2002','DD-MM-YYYY'),'M','BD-13',20000)
INTO EMPLOYEE VALUES('E3','JOHN',TO_DATE('02-06-2002','DD-MM-YYYY'),'M','EF-13',10000)
INTO EMPLOYEE VALUES('E4','SIDD',TO_DATE('11-12-2002','DD-MM-YYYY'),'M','GD-13',30000)
INTO EMPLOYEE VALUES('E5','ROSE',TO_DATE('01-09-2002','DD-MM-YYYY'),'F','CC-13',40000)
SELECT * FROM DUAL;

INSERT ALL
INTO COMPANY VALUES('C00001','ABC','SD-21')
INTO COMPANY VALUES('C00002','DEF','QW-24')
INTO COMPANY VALUES('C00003','CLIFFORD CORP','EE-34')
INTO COMPANY VALUES('C00004','TECHNO INDIA','EF-17')
INTO COMPANY VALUES('C00005','TCS','CC-2')
SELECT * FROM DUAL;

INSERT ALL
INTO WORKS VALUES('E1','C00001')
INTO WORKS VALUES('E2','C00002')
INTO WORKS VALUES('E3','C00003')
INTO WORKS VALUES('E4','C00004')
INTO WORKS VALUES('E5','C00005')
SELECT * FROM DUAL;

-- List the employees who work for company ‘C00002’ 
SELECT * FROM EMPLOYEE E WHERE E.EMP_NO IN (SELECT EMP_NO FROM WORKS WHERE COMP_NO = 'C00002');

-- List the employees who work for company ‘C00004’
SELECT * FROM EMPLOYEE E WHERE E.EMP_NO IN (SELECT EMP_NO FROM WORKS WHERE COMP_NO = 'C00004');

-- List the employees who work for Clifford Corp
SELECT * FROM EMPLOYEE E WHERE E.EMP_NO IN (
SELECT EMP_NO FROM WORKS W WHERE W.COMP_NO IN (SELECT COMP_NO FROM COMPANY WHERE NAME = 'CLIFFORD CORP')
);

-- List the employees whose name ends with ‘a’ 
SELECT NAME FROM EMPLOYEE WHERE NAME LIKE '%A';

-- List the employees born between 1999 and 2011
SELECT NAME FROM EMPLOYEE WHERE EXTRACT(YEAR FROM DOB) BETWEEN '1999' AND '2011';