-- CREATE TABLES

-- CREATE TABLE PRODUCER
CREATE TABLE PRODUCER (
    PRODUCERID NUMBER PRIMARY KEY,
    FULLNAME VARCHAR2(50),
	--SONGNUMBER NUMBER,
	--CONSTRAINT PFK1 FOREIGN KEY (SONGNUMBER) REFERENCES SONG(SONGNUMBER) ON DELETE CASCADE
);

-- CREATE TABLE SONG
CREATE TABLE SONG (
    SONGNUMBER NUMBER PRIMARY KEY,
    TITLE VARCHAR2(50),
    COMPOSITIONDATE DATE,
	PRODUCERID NUMBER,
	CONSTRAINT SFK1 FOREIGN KEY (PRODUCERID) REFERENCES PRODUCER(PRODUCERID) ON DELETE CASCADE
);

-- CREATE TABLE COMPOSER
CREATE TABLE COMPOSER (
    COMPOSERID NUMBER PRIMARY KEY,
    FULLNAME VARCHAR2(50)
);

-- CREATE TABLE RECORDINGARTIST
CREATE TABLE RECORDINGARTIST (
    ARTISTID NUMBER PRIMARY KEY,
    FULLNAME VARCHAR2(50)
);

-- CREATE TABLE CD
CREATE TABLE CD (
    CATALOGUENUMBER NUMBER PRIMARY KEY,
    TITLE VARCHAR2(50),
    PRODUCERID NUMBER,
    RELEASEDATE DATE,
    SALES NUMBER,
    CONSTRAINT CDFK1 FOREIGN KEY (PRODUCERID) REFERENCES PRODUCER(PRODUCERID) ON DELETE CASCADE
);

-- CREATE TABLE SONGCOMPOSER
CREATE TABLE SONGCOMPOSER (
    SONGNUMBER NUMBER,
    COMPOSERID NUMBER,
    CONSTRAINT SCFK1 FOREIGN KEY (SONGNUMBER) REFERENCES SONG(SONGNUMBER) ON DELETE CASCADE,
    CONSTRAINT SCFK2 FOREIGN KEY (COMPOSERID) REFERENCES COMPOSER(COMPOSERID) ON DELETE CASCADE
);

-- CREATE TABLE SONGRECORDINGARTIST
CREATE TABLE SONGRECORDINGARTIST (
    SONGNUMBER NUMBER,
    ARTISTID NUMBER,
    CONSTRAINT SRAFK1 FOREIGN KEY (SONGNUMBER) REFERENCES SONG(SONGNUMBER) ON DELETE CASCADE,
    CONSTRAINT SRAFK2 FOREIGN KEY (ARTISTID) REFERENCES RECORDINGARTIST(ARTISTID) ON DELETE CASCADE
);

-- CREATE TABLE CDTRACK
CREATE TABLE CDTRACK (
    CATALOGUENUMBER NUMBER,
    TRACKNO NUMBER,
    RECORDINGDATE DATE,
    SONGNUMBER NUMBER,
    CONSTRAINT CTFK1 FOREIGN KEY (CATALOGUENUMBER) REFERENCES CD(CATALOGUENUMBER) ON DELETE CASCADE,
    CONSTRAINT CTFK2 FOREIGN KEY (SONGNUMBER) REFERENCES SONG(SONGNUMBER) ON DELETE CASCADE
);

-- CREATE TABLE CDRECORDINGARTIST
CREATE TABLE CDRECORDINGARTIST (
    CATALOGUENUMBER NUMBER,
    ARTISTID NUMBER,
    CONSTRAINT CRAFK1 FOREIGN KEY (CATALOGUENUMBER) REFERENCES CD(CATALOGUENUMBER) ON DELETE CASCADE,
    CONSTRAINT CRAFK2 FOREIGN KEY (ARTISTID) REFERENCES RECORDINGARTIST(ARTISTID) ON DELETE CASCADE
);

CREATE TABLE CONTRACT (
	CONTRACTID NUMBER PRIMARY KEY,
	ARTISTID NUMBER,
	COMPENSATION NUMBER,
	CONSTRAINT CNFK1 FOREIGN KEY (ARTISTID) REFERENCES RECORDINGARTIST(ARTISTID) ON DELETE CASCADE
);

-- INSERT VALUES

-- Inserting values into PRODUCER table
INSERT ALL
INTO PRODUCER VALUES (1, 'Producer1')
INTO PRODUCER VALUES (2, 'Producer2')
INTO PRODUCER VALUES (3, 'Producer3')
INTO PRODUCER VALUES (4, 'Producer4')
INTO PRODUCER VALUES (5, 'Producer5')
SELECT * FROM DUAL;

-- Inserting values into SONG table
INSERT ALL
INTO SONG VALUES (1, 'Song1', TO_DATE('01-01-2023', 'DD-MM-YYYY'))
INTO SONG VALUES (2, 'Song2', TO_DATE('15-12-2022', 'DD-MM-YYYY'))
INTO SONG VALUES (3, 'Song3', TO_DATE('20-02-2024', 'DD-MM-YYYY'))
INTO SONG VALUES (4, 'Song4', TO_DATE('10-05-2023', 'DD-MM-YYYY'))
INTO SONG VALUES (5, 'Song5', TO_DATE('30-11-2022', 'DD-MM-YYYY'))
SELECT * FROM DUAL;

-- Inserting values into COMPOSER table
INSERT ALL
INTO COMPOSER VALUES (1, 'Composer1')
INTO COMPOSER VALUES (2, 'Composer2')
INTO COMPOSER VALUES (3, 'Composer3')
INTO COMPOSER VALUES (4, 'Composer4')
INTO COMPOSER VALUES (5, 'Composer5')
SELECT * FROM DUAL;

-- Inserting values into RECORDINGARTIST table
INSERT ALL
INTO RECORDINGARTIST VALUES (1, 'Artist1')
INTO RECORDINGARTIST VALUES (2, 'Artist2')
INTO RECORDINGARTIST VALUES (3, 'Artist3')
INTO RECORDINGARTIST VALUES (4, 'Artist4')
INTO RECORDINGARTIST VALUES (5, 'Artist5')
SELECT * FROM DUAL;

-- Inserting values into CD table
INSERT ALL
INTO CD VALUES (1, 'CD1', 1, TO_DATE('01-01-2023', 'DD-MM-YYYY'), 1000)
INTO CD VALUES (2, 'CD2', 2, TO_DATE('15-02-2023', 'DD-MM-YYYY'), 1500)
INTO CD VALUES (3, 'CD3', 3, TO_DATE('20-03-2024', 'DD-MM-YYYY'), 1200)
INTO CD VALUES (4, 'CD4', 1, TO_DATE('15-12-2022', 'DD-MM-YYYY'), 800)
INTO CD VALUES (5, 'CD5', 2, TO_DATE('30-05-2023', 'DD-MM-YYYY'), 2000)
SELECT * FROM DUAL;

-- Inserting values into SONGCOMPOSER table
INSERT ALL
INTO SONGCOMPOSER VALUES (1, 1)
INTO SONGCOMPOSER VALUES (2, 2)
INTO SONGCOMPOSER VALUES (3, 3)
INTO SONGCOMPOSER VALUES (4, 4)
INTO SONGCOMPOSER VALUES (5, 5)
SELECT * FROM DUAL;

-- Inserting values into SONGRECORDINGARTIST table
INSERT ALL
INTO SONGRECORDINGARTIST VALUES (1, 1)
INTO SONGRECORDINGARTIST VALUES (2, 2)
INTO SONGRECORDINGARTIST VALUES (3, 3)
INTO SONGRECORDINGARTIST VALUES (4, 4)
INTO SONGRECORDINGARTIST VALUES (5, 5)
SELECT * FROM DUAL;

-- Inserting values into CDTRACK table
INSERT ALL
INTO CDTRACK VALUES (1, 1, TO_DATE('01-01-2023', 'DD-MM-YYYY'), 1)
INTO CDTRACK VALUES (2, 1, TO_DATE('15-02-2023', 'DD-MM-YYYY'), 2)
INTO CDTRACK VALUES (3, 1, TO_DATE('20-03-2024', 'DD-MM-YYYY'), 3)
INTO CDTRACK VALUES (4, 1, TO_DATE('05-12-2022', 'DD-MM-YYYY'), 4)
INTO CDTRACK VALUES (5, 1, TO_DATE('30-05-2023', 'DD-MM-YYYY'), 5)
SELECT * FROM DUAL;

-- Inserting values into CDRECORDINGARTIST table
INSERT ALL
INTO CDRECORDINGARTIST VALUES (1, 1)
INTO CDRECORDINGARTIST VALUES (2, 2)
INTO CDRECORDINGARTIST VALUES (3, 3)
INTO CDRECORDINGARTIST VALUES (4, 4)
INTO CDRECORDINGARTIST VALUES (5, 5)
SELECT * FROM DUAL;

-- QUERIES

-- i>Update number of recorded album to 4 for those artist who has recorded only 3.
ALTER TABLE RECORDINGARTIST ADD SALES NUMBER;
ALTER TABLE RECORDINGARTIST RENAME COLUMN SALES TO ALBUMS;
UPDATE RECORDINGARTIST SET ALBUMS = 1 WHERE ARTISTID = 1;
UPDATE RECORDINGARTIST SET ALBUMS = 2 WHERE ARTISTID = 2;
UPDATE RECORDINGARTIST SET ALBUMS = 3 WHERE ARTISTID = 3;
UPDATE RECORDINGARTIST SET ALBUMS = 4 WHERE ARTISTID = 4;
UPDATE RECORDINGARTIST SET ALBUMS = 5 WHERE ARTISTID = 5;

UPDATE RECORDINGARTIST SET ALBUMS = 4 WHERE ALBUMS = 3;

-- ii>Find all artists who have recorded at least two albums.
SELECT * FROM RECORDINGARTIST WHERE ALBUMS >= 2;

-- iii>Find all writers who have only written one song.
CREATE TABLE COUNTSONG AS SELECT COUNT(SONGNUMBER) TOTSONG, COMPOSERID FROM SONGCOMPOSER GROUP BY COMPOSERID;
SELECT C.COMPOSERID, C.FULLNAME FROM COMPOSER C JOIN COUNTSONG CS ON CS.COMPOSERID = C.COMPOSERID WHERE CS.TOTSONG = 1;

-- PL/SQL i>Write Procedure to insert a new Contract into the Contract relation.
CREATE OR REPLACE PROCEDURE INSERTCONTRACT (CID IN NUMBER, AID IN NUMBER, COMP IN NUMBER)
AS
BEGIN
	INSERT INTO CONTRACT VALUES(CID,AID,COMP);
	COMMIT;
END;
/